name: Recovery CI
on:
  workflow_dispatch:
    inputs:
      OFFICIAL_BUILD:
        description: 'set true if you wanna push Official Build'
        required: false
env:
  MANIFEST: "https://github.com/PitchBlackRecoveryProject/manifest_pb -b android-12.1"
  # Recovery Manifest URL with -b branch
  DT_LINK: "https://github.com/SIDDK24/TWRP_enchilada.git -b Pbrp"
  # Your Device Tree Link
  VENDOR: "oneplus"
  # Your Device's Vendor name as in used inside DT. Example: xiaomi, samsung, asus, etc.
  CODENAME: "enchilada"
  # Your Device's Codename as in used inside DT." Example: nikel, phoenix, ginkgo, etc.
  KERNEL_LINK: ""
  # Kernel repo link with optional -b branch. Only for building kernel from source. Ignore if using prebuilt.
  TARGET: "bootimage"
  # Set as recoveryimage (or bootimage if no recovery partition avaiable)
  FLAVOR: "eng"
  # eng by default, change the variable if you want userdebug
  SOURCE: "twrp"
  # Set as omni (or twrp if using v3_11.0)
  EXTRA_CMD: ""
  # For qualcomm FDE devices put git clone https://github.com/omnirom/android_vendor_qcom_opensource_commonsys --depth=1 -b android-9.0 vendor/qcom/opensource/commonsys in EXTRA CMD
  # If you want to Execute any external Command Before Compilation Starts
  TZ: "Asia/Kolkata"
  TOKEN: ${{ secrets.BOTTOKEN }}
  OFFICIAL_BUILD: ${{ github.event.inputs.OFFICIAL_BUILD }}

jobs:
  RecoveryCI:
    runs-on: ubuntu-20.04

    steps:
       - name: Cleaning Up Runner
         uses: rokibhasansagar/slimhub_actions@main

       - name: Recovery Compilation
         uses: SIDDK24/Recovery-Compiler@production

       - name: Uploading Build
         run: |
              cd ${BuildPath}/out/target/product/${CODENAME}/
              curl -sL https://git.io/file-transfer | sh
              ./transfer wet *.img
              ./transfer wet *.zip
